#!/usr/bin/php
<?php
include_once 'thj-info-init.php';
include_once 'local/main.class.php';
include_once 'autoload.php';

$main = new Main([
   'debugLevel'     => 9,
   'debugType'      => DEBUG_CLI,
   'errorReporting' => false,
   'sessionStart'   => false,
   'memoryLimit'    => null,
   'sendHeaders'    => false,
   'database'       => false,
   'input'          => false,
   'html'           => false,
   'adminlte'       => false,
   'cliLongOpts'    => null,
]);

$settings   = json_decode(file_get_contents(APP_CONFIGDIR.'/settings.json'),true);
$apiOptions = ['baseUrl' => $settings['THJ_INFO_API_URL'], 'authToken' => $settings['THJ_INFO_API_AUTH_TOKEN']];

if (!$main->buildClass('api','MyAPI',$apiOptions,'local/myapi.class.php')) { exit; }

use Discord\DiscordCommandClient;
use Discord\Parts\Interactions\Interaction;
use Discord\Builders\MessageBuilder;
use Discord\Builders\Components\StringSelect;
use Discord\Builders\Components\Option;

// Create a $discord BOT
$discord = new DiscordCommandClient([
    'token' => $settings['THJ_INFO_DISCORD_BOT_TOKEN'], 
]);

$discord->listenCommand('thjaa', function (Interaction $interaction) use ($main) {
    // Ignore messages from any Bots
    if ($interaction->user->bot) return;

    /** @var $api MyAPI */
    $api = $main->obj('api');

    $response = '';

    // Respond to the interaction
    $interaction->respondWithMessage(
        MessageBuilder::new()
            ->setContent($response)
            ->setComponents([])
    );
});


$discord->listenCommand('thjpower', function (Interaction $interaction) use ($main) {
    // Ignore messages from any Bots
    if ($interaction->user->bot) return;

    /** @var $api MyAPI */
    $api = $main->obj('api');

    $response = '';

    // Respond to the interaction
    $interaction->respondWithMessage(
        MessageBuilder::new()
            ->setContent($response)
            ->setComponents([])
    );
});

// Start the Bot (must be at the bottom)
$discord->run();